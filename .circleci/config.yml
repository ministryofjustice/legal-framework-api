version: 2.1

workflows:
  Build and deploy:
    jobs:
      - build:
          context: legal-framework-api-uat

jobs:
  build:
    docker:
      - image: ${ECR_ENDPOINT}/cloud-platform/tools:circleci-internal
        environment:
          IMAGE_URI: ${ECR_ENDPOINT}/legal-framework-api
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Decrypt secrets file
          command: |
            echo "${GIT_CRYPT_KEY}" | base64 -d > git-crypt.key
            git-crypt unlock git-crypt.key
      - run:
          name: Build application Docker image and push to ECR
          command: |
            $(aws ecr get-login --no-include-email)
            docker build \
            --build-arg BUILD_DATE=$(date +%Y-%m-%dT%H:%M:%S%z) \
            --build-arg BUILD_TAG="app-${CIRCLE_SHA1}" \
            --build-arg APP_BRANCH=${CIRCLE_BRANCH} \
            -t app .
            docker tag app "${ECR_ENDPOINT}/laa-apply-for-legal-aid/legal-framework-api-uat-ecr:${CIRCLE_SHA1}"
            docker push "${ECR_ENDPOINT}/laa-apply-for-legal-aid/legal-framework-api-uat-ecr:${CIRCLE_SHA1}"
      - run:
          name: Authenticate with cluster
          command: |
            echo -n ${K8S_CLUSTER_CERT} | base64 -d > ./ca.crt
            kubectl config set-cluster ${K8S_CLUSTER_NAME} --certificate-authority=./ca.crt --server=https://api.${K8S_CLUSTER_NAME}
            kubectl config set-credentials circleci --token=${K8S_TOKEN}
            kubectl config set-context ${K8S_CLUSTER_NAME} --cluster=${K8S_CLUSTER_NAME} --user=circleci --namespace=${K8S_NAMESPACE}
            kubectl config use-context ${K8S_CLUSTER_NAME}
      - run:
          name: Helm deployment to UAT
          command: |
            echo "Installing LFAPI helm chart"
            ./bin/uat_deploy
            kubectl --namespace=${K8S_NAMESPACE} get pods
